kind: pipeline
type: docker
name: default

trigger:
  event: [ push ]
  branch: [ main ]

steps:

- name: publish-image
  image: plugins/docker
  settings:
    dockerfile: Dockerfile
    repo: openmina/mina-network-debugger
    tags:
      - ${DRONE_COMMIT_SHA:0:8}
    password:
      from_secret: docker_hub_password
    username:
      from_secret: docker_hub_username

- name: simulate-block-broadcast-and-compare-timestamps-to-tcpflow-output
  image: alpine/helm:3.8.1
  environment:
    DRONE_KUBECONFIG:
      from_secret: k8s_config
  commands:
    - mkdir -p $HOME/.kube
    - echo "$DRONE_KUBECONFIG" > $HOME/.kube/config
    # - kubectl -n test-debugger delete job mock
    - helm upgrade mina-debugger-test helm/tester --values=helm/tester/values.yaml --namespace=test-debugger --set=build_number=${DRONE_BUILD_NUMBER} --set=blocks=$BLOCKS --set=delay=$DELAY --set=parallelism=$PARALLElISM --set=image.tag=${DRONE_COMMIT_SHA:0:8}
    - apk update && apk add curl jq
    - echo "Simple test, $PARALLElISM mock nodes exchange $BLOCKS blocks ..."
    - sleep $(( $BLOCKS * $DELAY ))
    # - while [ $(curl -s $URL | jq .debugger_version) != "${DRONE_COMMIT_SHA:0:8}"* ]; do sleep 1; done
    - while [ $(curl -s $URL) == "null" ]; do sleep 1; done
    - curl -s $URL > test.json
    - echo "Debugger commit hash $(jq .debugger_version test.json)"
    - if [[ $(jq .success test.json) == "true" ]]; then echo "Passed"; exit 0; else jq . test.json; echo "Failed"; exit 1; fi

environment:
  BLOCKS: 20
  DELAY: 6
  PARALLElISM: 10
  URL: http://1.k8.openmina.com:31876/test
